package com.internousdev.craftdenki.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.internousdev.craftdenki.dto.FavoriteDTO;
import com.internousdev.craftdenki.util.DBConnector;
import com.internousdev.craftdenki.util.DateUtil;

public class FavoriteDAO {

	private DBConnector dbConnector = new DBConnector();
	private Connection connection = dbConnector.getConnection();

	public ArrayList<FavoriteDTO> getMyPageUserInfo(String loginId) throws SQLException {
		ArrayList<FavoriteDTO> favoriteDTO = new ArrayList<FavoriteDTO>();
		// SQL文わからない
		String sql = "SELECT product_name, product_name_kana, image_file_path,image_file_name, price, release_company, release_date from favorite_info JOIN product_info ON favorite_info.product_id = product_info.product_id where user_id = ?";


		try {
			PreparedStatement ps = connection.prepareStatement(sql);

			ps.setString(1, loginId);

			ResultSet rs = ps.executeQuery();



			while (rs.next()) {
				FavoriteDTO dto = new FavoriteDTO();
				dto.setProductName(rs.getString("product_name"));
				dto.setProductNameKana(rs.getString("product_name_kana"));
				dto.setImageFilePath(rs.getString("image_file_path"));
				dto.setImageFileName(rs.getString("image_file_name"));
				dto.setPrice(rs.getString("price"));
				dto.setReleaseCompany(rs.getString("release_company"));
				dto.setReleaseDate(rs.getString("release_date"));
				favoriteDTO.add(dto);
				// FavoriteDTO.add(dto);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			connection.close();
		}

		return favoriteDTO;
	}






	public void deleteFavoriteInfo(String product_id){
		DBConnector db=new DBConnector();
		Connection con=db.getConnection();

		String sql="delete from favorite_info where product_id=?";

		try {
			PreparedStatement preparedStatement1=connection.prepareStatement(sql);
			preparedStatement1.setString(1,userid);
			preparedStatement1.setString(2, pass);
			preparedStatement1.setString(3,familyname);
			preparedStatement1.setString(4, firstname);
			preparedStatement1.setString(5, familynamekana);
			preparedStatement1.setString(6, firstnamekana);
			preparedStatement1.setInt(7, sex);
			preparedStatement1.setString(8, email);
			preparedStatement1.setInt(9, secretquestion);
			preparedStatement1.setString(10,secretanswer);
			preparedStatement1.setString(11,dateUtil.getDate());

			preparedStatement1.execute();

			PreparedStatement preparedStatement2=connection.prepareStatement(sql2);
			preparedStatement2.setString(1,userid);
			preparedStatement2.setString(2, address);
			preparedStatement2.setString(3, tel);

			preparedStatement2.execute();
		}catch(Exception e) {
			e.printStackTrace();
		}finally {
			connection.close();
		}
	}



}
