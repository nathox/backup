/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2018-02-28 04:32:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/internousdev/Desktop/workspace/workspace-kaneda/backup/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/craftdenki/WEB-INF/lib/struts2-core-2.3.32.jar!/META-INF/struts-tags.tld", Long.valueOf(1488769580000L));
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.3.32.jar", Long.valueOf(1519377391214L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>HOME画面</title>\r\n");
      out.write("\r\n");
      out.write("<!--  <link href=\"css/craftdenki.css\" rel=\"stylesheet\">-->\r\n");
      out.write("<style>\r\n");
      out.write("ul,li {\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tpadding:0;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#craft\t{\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 50%;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  -ms-transform: translate(-50%,-50%);\r\n");
      out.write("  -webkit-transform: translate(-50%,-50%);\r\n");
      out.write("  transform: translate(-50%,-50%);\r\n");
      out.write("  margin:0;\r\n");
      out.write("  padding-top:200px;\r\n");
      out.write("  transition: 1.0s ;\r\n");
      out.write("  /*文字の装飾は省略*/\r\n");
      out.write("  }\r\n");
      out.write("#craft:hover{\r\n");
      out.write("  filter: alpha(opacity=0);\r\n");
      out.write("  -moz-opacity:0;\r\n");
      out.write("  opacity:0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "home2.jsp", out, false);
      out.write("\r\n");
      out.write("\t<div class=\"main2\">\r\n");
      out.write("\r\n");
      out.write("\t");
 double number = Math.random();
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"main_slide\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><img src=\"images/ayasiihon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/eigonohon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/kowaihon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/mukasibanasibon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/nekonohon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/ryouribon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/suugakunohon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/boroborobon.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/bestbook.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"main_slide2\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><img src=\"images/sinpurunasuihannki.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/dennsirennzi.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/doraiya.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/ko-hi-me-ka-.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/terebi.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/haburasi.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/higesori.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/ketoru.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/mikisa.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/souziki.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t<div id=\"main_slide3\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><img src=\"images/illustrain04-nuigurumi10.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/pingpong.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/illustrain04-wanage04.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/robot.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/mazyan.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/tezina.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t\t<li><img src=\"images/igo.png\" alt=\"\" width=\"300\" height=\"240\" /></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("<img src=\"images/tanomu.svg?");
      out.print(number );
      out.write("\" width=\"900\" height=\"500\" id=\"craft\" class=\"denki\"/>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
